#!/usr/bin/env node

const fetch = require('node-fetch');

const SERVER_URL = 'https://beckend-yaj1.onrender.com';

async function testEndpoint(url, options = {}) {
    try {
        console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É—é: ${url}`);
        const response = await fetch(url, options);
        const data = await response.json();
        
        if (response.ok) {
            console.log('‚úÖ –£—Å–ø–µ—Ö:', JSON.stringify(data, null, 2));
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞:', JSON.stringify(data, null, 2));
        }
        
        return { success: response.ok, data };
    } catch (error) {
        console.log('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:', error.message);
        return { success: false, error: error.message };
    }
}

async function runTests() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ Kracken');
    console.log('üåê –°–µ—Ä–≤–µ—Ä:', SERVER_URL);
    console.log('='.repeat(50));

    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
    await testEndpoint(`${SERVER_URL}/api/health`);

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ OAuth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    await testEndpoint(`${SERVER_URL}/api/test/github-oauth`);

    // –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ email
    await testEndpoint(`${SERVER_URL}/api/test/email`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            to: 'test@example.com',
            template: 'welcome',
            data: { username: 'TestUser' }
        })
    });

    // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–æ–≤–∞—è OAuth —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    await testEndpoint(`${SERVER_URL}/api/test/oauth-register`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            githubId: '123456',
            username: 'testuser',
            email: 'test@example.com',
            avatarUrl: 'https://api.dicebear.com/7.x/avataaars/svg?seed=testuser'
        })
    });

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await testEndpoint(`${SERVER_URL}/api/test/oauth-register`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            githubId: '123456',
            username: 'testuser',
            email: 'test@example.com',
            avatarUrl: 'https://api.dicebear.com/7.x/avataaars/svg?seed=testuser'
        })
    });

    console.log('\n' + '='.repeat(50));
    console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub OAuth App');
    console.log('2. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Render');
    console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://beckend-yaj1.onrender.com/test-oauth.html');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runTests().catch(console.error);
