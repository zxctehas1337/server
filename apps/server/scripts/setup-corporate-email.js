#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ email –∞–∫–∫–∞—É–Ω—Ç–∞
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏—Å–µ–º —á–µ—Ä–µ–∑ –≤–∞—à –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
 */

const readline = require('readline');
const fs = require('fs');
const path = require('path');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function question(prompt) {
    return new Promise((resolve) => {
        rl.question(prompt, resolve);
    });
}

async function setupCorporateEmail() {
    console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ email –¥–ª—è Kracken Messenger\n');
    
    console.log('üìß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ email –≤–∞–º –Ω—É–∂–Ω–æ:');
    console.log('1. –í–∫–ª—é—á–∏—Ç—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ –≤–∞—à–µ–º Google –∞–∫–∫–∞—É–Ω—Ç–µ');
    console.log('2. –°–æ–∑–¥–∞—Ç—å App Password –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    console.log('3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–æ–ª—å –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è\n');
    
    const email = await question('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π email (–Ω–∞–ø—Ä–∏–º–µ—Ä: your@company.com): ');
    
    if (!email.includes('@')) {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email');
        rl.close();
        return;
    }
    
    const appPassword = await question('–í–≤–µ–¥–∏—Ç–µ App Password (16 —Å–∏–º–≤–æ–ª–æ–≤): ');
    
    if (appPassword.length !== 16) {
        console.log('‚ùå App Password –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 16 —Å–∏–º–≤–æ–ª–æ–≤');
        rl.close();
        return;
    }
    
    const displayName = await question('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: Kracken Support): ');
    
    // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞
    const envContent = `# GitHub OAuth Configuration
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret
GITHUB_CALLBACK_URL=http://localhost:3000/api/auth/github/callback

# JWT Configuration
JWT_SECRET=your_super_secret_jwt_key_here

# Email Configuration (Corporate Gmail)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=${email}
SMTP_PASS=${appPassword}
SMTP_FROM=${displayName} <${email}>

# Frontend URL
FRONTEND_URL=http://localhost:3000

# Database (PostgreSQL)
DATABASE_URL=postgresql://username:password@localhost:5432/kracken_db

# Server Configuration
PORT=3000
NODE_ENV=development
`;
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ .env —Ñ–∞–π–ª
    const envPath = path.join(__dirname, '..', '.env');
    fs.writeFileSync(envPath, envContent);
    
    console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log(`üìÅ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω: ${envPath}`);
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ó–∞–º–µ–Ω–∏—Ç–µ "your_github_client_id" –∏ "your_github_client_secret" –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ GitHub OAuth');
    console.log('2. –ó–∞–º–µ–Ω–∏—Ç–µ "your_super_secret_jwt_key_here" –Ω–∞ —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è JWT');
    console.log('3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DATABASE_URL –¥–ª—è –≤–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev');
    console.log('\nüß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è email –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
    console.log('POST /api/test/email');
    console.log('Body: { "template": "test", "to": "test@example.com" }');
    
    rl.close();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupCorporateEmail().catch(console.error);
